/*
 *     ASTArguments.java  Nov 20, 2001
 *
 *     Katsuhisa Maruyama (maru@fse.jrt.cs.ritsumei.ac.jp)
 */

/* Generated By:JJTree: Do not edit this line. ASTArguments.java */

package jp.ac.ritsumei.cs.fse.jrt.parser.ast;
import jp.ac.ritsumei.cs.fse.jrt.parser.*;
import jp.ac.ritsumei.cs.fse.jrt.parser.summary.*;
import jp.ac.ritsumei.cs.fse.jrt.model.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;

public class ASTArguments extends SimpleNode {
    private JavaStatement jstatement = new JavaStatement(this);
    private String name;
    private JavaVariable actualOut = null;
    private SummaryJavaMethod smethod;
    private ArrayList arguments = new ArrayList();  // JavaStatement

    public ASTArguments(int id) {
        super(id);
    }

    public ASTArguments(JavaParser p, int id) {
        super(p, id);
    }

    public JavaStatement getJavaStatement() {
        return jstatement;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setActualOut(JavaVariable jvar) {
        actualOut = jvar;
    }

    public JavaVariable getActualOut() {
        return actualOut;
    }

    public void setCalledMethod(SummaryJavaMethod smethod) {
        this.smethod = smethod;
    }

    public SummaryJavaMethod getCalledMethod() {
        return smethod;
    }

    public void addArgument(JavaStatement jst) {
        arguments.add(jst);
    }

    public ArrayList getArguments() {
        return arguments;
    }

    public JavaVariableList getArgumentList() {
        JavaVariableList vlist = new JavaVariableList();
        Iterator it = arguments.iterator();
        while (it.hasNext()) {
            JavaStatement jst = (JavaStatement)it.next();
            vlist.add(jst.getDefVariables().getFirst());
        }
        return vlist;
    }

    public Object jjtAccept(JavaParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }
}
